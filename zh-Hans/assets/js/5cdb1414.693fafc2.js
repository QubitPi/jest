"use strict";(self.webpackChunkjest_website=self.webpackChunkjest_website||[]).push([[3453],{2297:e=>{e.exports=JSON.parse('{"permalink":"/zh-Hans/blog/2017/05/06/jest-20-delightful-testing-multi-project-runner","editUrl":"https://github.com/jestjs/jest/tree/main/website/blog/2017-05-06-jest-20-delightful-testing-multi-project-runner.md","source":"@site/blog/2017-05-06-jest-20-delightful-testing-multi-project-runner.md","title":"Jest 20: \ud83d\udc96 Delightful Testing & \ud83c\udfc3\ud83c\udffd Multi-Project-Runner","description":"A few months ago we announced Jest 19 which came with major new features and was the biggest Jest release until today. Jest 20 has twice the amount of changes compared to the previous version, features a complete rewrite of the test runner, adds new testing APIs. The new release enables a new level of customization and configuration for projects all while making it effortless to upgrade. Beyond Painless JavaScript Testing, we believe Jest is now delivering a Delightful JavaScript Testing experience. Let\'s take a look at the best new features and changes in depth:","date":"2017-05-06T00:00:00.000Z","tags":[],"readingTime":6.325,"hasTruncateMarker":true,"authors":[{"name":"Christoph Nakazawa","url":"https://github.com/cpojer","socials":{"github":"https://github.com/cpojer","x":"https://x.com/cpojer"},"imageURL":"https://github.com/cpojer.png","key":"cpojer","page":null}],"frontMatter":{"title":"Jest 20: \ud83d\udc96 Delightful Testing & \ud83c\udfc3\ud83c\udffd Multi-Project-Runner","authors":"cpojer"},"unlisted":false,"prevItem":{"title":"Jest 22: Refinements & Custom Runners","permalink":"/zh-Hans/blog/2017/12/18/jest-22"},"nextItem":{"title":"\ud83c\udccf Jest 19: Immersive Watch Mode & Test Platform Improvements","permalink":"/zh-Hans/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements"}}')},3023:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var s=n(3696);const r={},o=s.createContext(r);function a(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:t},e.children)}},8280:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var s=n(2297),r=n(2540),o=n(3023);const a={title:"Jest 20: \ud83d\udc96 Delightful Testing & \ud83c\udfc3\ud83c\udffd Multi-Project-Runner",authors:"cpojer"},i=void 0,l={authorsImageUrls:[void 0]},c=[{value:"Multi-Project-Runner &amp; Configuration Overhaul",id:"multi-project-runner--configuration-overhaul",level:2}];function u(e){const t={a:"a",h2:"h2",img:"img",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["A few months ago we announced ",(0,r.jsx)(t.a,{href:"/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements",children:"Jest 19"})," which came with major new features and was the biggest Jest release until today. Jest 20 has twice the amount of changes compared to the previous version, features a complete rewrite of the test runner, adds new testing APIs. The new release enables a new level of customization and configuration for projects all while making it effortless to upgrade. Beyond Painless JavaScript Testing, we believe Jest is now delivering a ",(0,r.jsx)(t.strong,{children:"Delightful JavaScript Testing experience"}),". Let's take a look at the best new features and changes in depth:"]}),"\n",(0,r.jsx)(t.h2,{id:"multi-project-runner--configuration-overhaul",children:"Multi-Project-Runner & Configuration Overhaul"}),"\n",(0,r.jsxs)(t.p,{children:["Until now, Jest could only operate in one project at a time. This is often cumbersome if you are working on many smaller projects that each have their own setup and configuration. With Jest 20, we rewrote the test runner completely to run many projects at the same time within a single instance of Jest, for example if you are working on a React frontend and a node.js backend. Here is a video of Jest running tests for ",(0,r.jsx)(t.a,{href:"https://github.com/facebook/react",children:"React"}),", ",(0,r.jsx)(t.a,{href:"https://github.com/facebook/relay",children:"Relay"}),", ",(0,r.jsx)(t.a,{href:"https://github.com/yarnpkg/yarn",children:"Yarn"})," and Jest all at the same time:"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"multi-runner",src:n(9951).A+"",width:"839",height:"520"})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},9951:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/20-multi-runner-bca686433b2cb63c147951eedce67538.gif"}}]);